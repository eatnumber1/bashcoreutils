#!/bin/bash
USAGE="Usage: cat [OPTION]... [FILE]...
Concatenate FILE(s), or standard input, to standard output.

  -A	equivalent to -vET
  -b	number nonempty output lines
  -e	equivalent to -vE
  -E	display $ at end of each line
  -n	number all output lines
  -s	suppress repeated empty output lines
  -t	equivalent to -vT
  -T	display TAB characters as ^I
  -v	use ^ and M- notation, except for LFD and TAB
  -h	display this help and exit

With no FILE, or when FILE is -, read standard input.

Examples:
  cat f - g  Output f's contents, then standard input, then g's contents.
  cat        Copy standard input to standard output."
usage() {
	if [[ -z "$1" || "$1" == "2" ]]; then
		echo "$USAGE" >&2
		exit 1
	else
		echo "$USAGE"
		exit
	fi
}
unsupported() {
	echo "Operation -$1 not implemented!" >&2
	exit 1
}

while getopts "hAbeEnstTv" flag; do
	case $flag in
		h)    usage 1;;
		b|n)  declare -i number=0
		      [[ "$flag" == "b" ]] && number_nonblank="true";;
		A|e|E|n|s|t|T|v) unsupported $flag;;
		\?)   usage;;
		*)    usage;;
	esac
done
shift $(( $OPTIND - 1 ))

IFS=$'\n'
INPUTS=( "${@:-"-"}" )
for i in "${INPUTS[@]}"; do
	if [[ "$i" != "-" ]]; then
		exec 3< "$i" || exit 1
	else
		exec 3<&0
	fi

	while read -ru 3 line; do
		if [[ -n "$number" ]]; then
			if [[ -n "$line" || -z "$number_nonblank" ]]; then
				printf '%-5i ' "$number"
				number+=1
			fi
		fi
		echo -E "$line"
	done
done
exec 3>&-
